We generated just over a million interview documents. After we generated these documents and re executed the previous queries, there was a noticeable time difference between before we added the million documents to the collection, and after we added them. The difference was that after we add the million documents, the queries took longer to execute and return the desired data. This was expected, as it would most likely be the case that if we were to add significantly more documents, the queries would in that case take even longer. Though I would like to point out that we did notice that even when querying over the million plus documents, the execution time was still very reasonable even running on our laptops. We also noticed that querying over a mongo database with over a million documents, took far less time than compared to a relational database such as mysql. In addition, we noticed that compared to relational databases, the creation and deletion of millions of entries took far less time to complete. When we say far less, we mean that mongo took seconds, whereas a relational database such as mysql took more than a few minutes. This is a good observation because it is applicable when dealing with big data in certain aspects such as large amounts of data that need to be frequently updated or constantly in a dynamic state. Though non relational databases might not always be applicable to a certain application, they do have some performance benefits over relational databases, especially when dealing with large amounts of data.